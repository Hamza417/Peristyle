plugins {
    id 'com.android.application'
    id 'org.jetbrains.kotlin.android'
    id 'kotlin-kapt'
    id 'com.google.devtools.ksp'
    id 'org.jetbrains.kotlin.plugin.compose'
}

static def loadProperties(filePath) {
    def properties = new Properties()
    def file = new File(filePath)
    if (file.exists()) {
        properties.load(new FileInputStream(file))
    } else {
        println("Properties file not found: $filePath")
    }
    return properties
}

static def findKeystoreFile(properties) {
    def path = System.getProperty("user.home") + "/work/_temp/keystore/"
    def fallbackPath = properties.get("KEYSTORE_PATH")
    def keystoreFileName = "key.jks"
    def keystoreFile = new File(path, keystoreFileName)

    if (!keystoreFile.exists() && fallbackPath != null) {
        keystoreFile = new File(fallbackPath)
    }

    return keystoreFile
}

static def getEnvOrProperty(envKey, properties) {
    return System.getenv(envKey) ?: properties.get(envKey)
}

android {
    namespace 'app.simple.peri'
    compileSdk 35

    buildFeatures {
        viewBinding = true
        compose = true
        buildConfig = true
    }

    defaultConfig {
        applicationId "app.simple.peri"
        minSdk 24
        targetSdk 35
        versionCode 900
        versionName "v9.0.0"

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"

        javaCompileOptions {
            ksp {
                arg("room.schemaLocation", "$projectDir/schemas".toString())
            }
            annotationProcessorOptions {
                arguments += ["room.schemaLocation": "$projectDir/schemas".toString()]
            }
        }
    }

    signingConfigs {
        release {
            def properties = loadProperties("local.properties")
            def keystoreFile = findKeystoreFile(properties)

            if (keystoreFile.exists()) {
                storeFile = keystoreFile
                storePassword = getEnvOrProperty("SIGNING_STORE_PASSWORD", properties)
                keyAlias = getEnvOrProperty("SIGNING_KEY_ALIAS", properties)
                keyPassword = getEnvOrProperty("SIGNING_KEY_PASSWORD", properties)
            } else {
                storeFile = null
                logger.error("Keystore file not found, signing disabled.")
            }
        }
    }

    buildTypes {
        release {
            minifyEnabled true
            shrinkResources true
            vcsInfo.include true
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
            if (signingConfigs.release != null && signingConfigs.release.storeFile != null) {
                signingConfig signingConfigs.release
            }
        }

        pre {
            minifyEnabled true
            shrinkResources true
            vcsInfo.include true
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
            versionNameSuffix "-pre"
            if (signingConfigs.release != null && signingConfigs.release.storeFile != null) {
                signingConfig signingConfigs.release
            }
        }

        debug {
            minifyEnabled false
            shrinkResources false
            vcsInfo.include false
            if (signingConfigs.release != null && signingConfigs.release.storeFile != null) {
                signingConfig signingConfigs.release
            }
        }
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_17
        targetCompatibility JavaVersion.VERSION_17
    }

    composeOptions {
        /**
         * Reference: https://developer.android.com/jetpack/androidx/releases/compose-kotlin
         */
        kotlinCompilerExtensionVersion = "1.5.14"
    }

    kotlinOptions {
        jvmTarget = JavaVersion.VERSION_17
    }

    flavorDimensions.add("default")

    productFlavors {
        dev {
            dimension "default"
            versionNameSuffix "-dev"
        }
        prod {
            dimension "default"
        }
    }

    namespace 'app.simple.peri'

    dependenciesInfo {
        includeInApk = false
        includeInBundle = false
    }
}

dependencies {

    def composeBom = platform('androidx.compose:compose-bom:2025.06.01')
    implementation composeBom
    androidTestImplementation composeBom

    // Compose
    implementation 'androidx.compose.material3:material3:1.3.2'
    implementation 'androidx.activity:activity-compose:1.10.1'
    implementation 'androidx.lifecycle:lifecycle-viewmodel-compose:2.9.1'
    implementation 'androidx.compose.runtime:runtime-livedata'
    implementation 'androidx.compose.foundation:foundation:1.8.3'
    implementation 'androidx.compose.ui:ui-tooling-preview-android:1.8.3'
    implementation 'androidx.navigation:navigation-compose:2.9.1'
    implementation "androidx.compose.material:material-icons-extended:1.7.8"
    debugImplementation 'androidx.compose.ui:ui-tooling:1.8.3'

    implementation 'androidx.window:window:1.4.0'
    implementation 'androidx.core:core-ktx:1.16.0'
    implementation 'androidx.lifecycle:lifecycle-viewmodel-savedstate:2.9.1'
    implementation 'androidx.lifecycle:lifecycle-viewmodel-ktx:2.9.1'
    implementation 'androidx.lifecycle:lifecycle-runtime-ktx:2.9.1'
    implementation 'androidx.lifecycle:lifecycle-livedata-ktx:2.9.1'
    implementation 'androidx.lifecycle:lifecycle-process:2.9.1'
    implementation 'androidx.palette:palette-ktx:1.0.0'

    implementation 'com.google.android.material:material:1.12.0'
    implementation 'com.google.accompanist:accompanist-drawablepainter:0.37.3'

    // Coil
    implementation 'io.coil-kt.coil3:coil-compose:3.2.0'
    implementation 'me.saket.telephoto:zoomable-image-coil3:0.16.0'

    // Glide
    implementation 'com.github.bumptech.glide:glide:4.16.0'
    implementation 'com.github.bumptech.glide:okhttp3-integration:4.16.0'
    implementation "com.github.bumptech.glide:compose:1.0.0-beta01"
    ksp 'com.github.bumptech.glide:ksp:4.16.0'

    // Room
    implementation "androidx.room:room-ktx:2.7.2"
    ksp "androidx.room:room-compiler:2.7.2"
    androidTestImplementation "androidx.room:room-testing:2.7.2"

    implementation 'id.zelory:compressor:3.0.1'
    implementation 'dev.chrisbanes.haze:haze:1.6.7'
    implementation 'dev.chrisbanes.haze:haze-materials:1.6.7'

    testImplementation 'junit:junit:4.13.2'
    androidTestImplementation 'androidx.test.ext:junit:1.2.1'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.6.1'

    // debugImplementation 'com.squareup.leakcanary:leakcanary-android:2.14'
}
